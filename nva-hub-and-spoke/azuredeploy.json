{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultAdmin": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the user or group who will have full permissons on Azure Key Vault"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location to deploy the resources. Modify template to allow additional regions"
            },
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "southcentralus",
                "westus",
                "westus2"
            ]
        },
        "onPremisesAddressSpace": {
            "type": "string",
            "metadata": {
                "description": "The IP address block used on-premises"
            },
            "defaultValue": "192.168.0.0/16"
        },
        "networkWatcherResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The resource group where Network Watcher resources exist"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "sharedSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Shared Services resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "transitSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Transit resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "workloadSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The id of the subscription where the Workload resource group and resources will be deployed"
            },
            "defaultValue": "[subscription().subscriptionId]"
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Creates a new GUID to create uniqueness for resources"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        }
    },
    "variables": {
        "resourcesApiVersion": "2020-06-01",
        "cloudRegionAddressSpace": "10.0.0.0/13",
        "sharedSvcIpLinuxDevServer": "10.1.2.5",
        "sharedSvcIpWindowsDevServer": "10.1.2.6",
        "sharedSvcRgDeployNamePh1": "[concat('deploy-shared-rg-phase1-',parameters('uniqueData'))]",
        "sharedSvcRgDeployNamePh2": "[concat('deploy-shared-rg-phase2-',parameters('uniqueData'))]",
        "sharedSvcRgName": "[concat('rg-shared-',parameters('uniqueData'))]",
        "sharedSvcSubDeploymentName": "[concat('deploy-shared-sub', parameters('uniqueData'))]",
        "sharedSvcPh1TemplateFile": "[concat(variables('sharedSvcTemplatesUri'), 'deploy-shared-ph1.json')]",
        "sharedSvcPh2TemplateFile": "[concat(variables('sharedSvcTemplatesUri'), 'deploy-shared-ph2.json')]",
        "sharedSvcTemplatesUri": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/shared/'))]",
        "sharedSvcVnetCidr": "10.1.0.0/16",
        "sharedSvcVnetSubnetCidrDev": "10.1.2.0/24",
        "sharedSvcVnetSubnetCidrDnsIn": "10.1.0.0/28",
        "sharedSvcVnetSubnetCidrDnsOut": "10.1.1.0/28",
        "sharedSvcVnetSubnetCidrPe": "10.1.3.0/24",
        "transitIpIlbInner": "10.0.1.100",
        "transitIpNvaVm1Inner": "10.0.1.10",
        "transitIpNvaVm2Inner": "10.0.1.20",
        "transitIpNvaVm1Outer": "10.0.129.10",
        "transitIpNvaVm2Outer": "10.0.129.20",
        "transitRgDeploymentName": "[concat('deploy-transit',parameters('uniqueData'))]",
        "transitRgName": "[concat('rg-transit-',parameters('uniqueData'))]",
        "transitSubDeploymentName": "[concat('deploy-transit-sub',parameters('uniqueData'))]",
        "transitTemplatesFile": "[concat(variables('transitTemplatesUri'), 'deploy-transit.json')]",
        "transitTemplatesUri": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/transit/'))]",
        "transitVnetCidr": "10.0.0.0/16",
        "transitVnetSubnetCidrBastion": "10.0.3.0/27",
        "transitVnetSubnetCidrGateway": "10.0.0.0/27",
        "transitVnetSubnetCidrNvaInner": "10.0.1.0/24",
        "transitVnetSubnetCidrNvaOuter": "10.0.129.0/24",
        "transitVnetSubnetGatewayNvaInner": "10.0.1.1",
        "transitVnetSubnetGatewayNvaOuter": "10.0.129.1",
        "workloadRgDeploymentName": "[concat('deploy-workload',parameters('uniqueData'))]",
        "workloadRgName": "[concat('rg-workload-',parameters('uniqueData'))]",
        "workloadSubDeploymentName": "[concat('deploy-workload-sub', parameters('uniqueData'))]",
        "workloadTemplatesFile": "[concat(variables('workloadTemplatesUri'), 'deploy-workload.json')]",
        "workloadTemplatesUri": "[concat(uri(deployment().properties.templateLink.uri,'templates/core/workload/'))]",
        "workloadVnetCidr": "10.2.0.0/16",
        "workloadVnetSubnetAppCidr": "10.2.0.0/24",
        "workloadVnetSubnetDataCidr": "10.2.1.0/24",
        "workloadVnetSubnetSvcCidr": "10.2.2.0/24"
    },
    "resources": [
        {
            "name": "[variables('transitSubDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('transitRgName')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('resourcesApiVersion')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('sharedSvcSubDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('sharedSvcRgName')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('resourcesApiVersion')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('workloadSubDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "location": "[parameters('location')]",
            "subscriptionId": "[parameters('workloadSubscriptionId')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "name": "[variables('workloadRgName')]",
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "[variables('resourcesApiVersion')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('sharedSvcRgDeployNamePh1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "resourceGroup": "[variables('sharedSvcRgName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('transitSubDeploymentName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('sharedSvcSubDeploymentName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('workloadSubDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "cloudRegionAddressSpace": {
                        "value": "[variables('cloudRegionAddressSpace')]"
                    },
                    "keyVaultAdmin": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "onPremisesAddressSpace": {
                        "value": "[parameters('onPremisesAddressSpace')]"
                    },
                    "sharedSvcVnetCidr": {
                        "value": "[variables('sharedSvcVnetCidr')]"
                    },
                    "sharedSvcVnetSubnetCidrDev": {
                        "value": "[variables('sharedSvcVnetSubnetCidrDev')]"
                    },
                    "sharedSvcVnetSubnetCidrDnsIn": {
                        "value": "[variables('sharedSvcVnetSubnetCidrDnsIn')]"
                    },
                    "sharedSvcVnetSubnetCidrDnsOut": {
                        "value": "[variables('sharedSvcVnetSubnetCidrDnsOut')]"
                    },
                    "sharedSvcVnetSubnetCidrPe": {
                        "value": "[variables('sharedSvcVnetSubnetCidrPe')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('vmAdminUsername')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('sharedSvcPh1TemplateFile')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('transitRgDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "resourceGroup": "[variables('transitRgName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('sharedSvcRgDeployNamePh1'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "cloudRegionAddressSpace": {
                        "value": "[variables('cloudRegionAddressSpace')]"
                    },
                    "dnsServerIp": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.dnsResolverInboundIp.value]"
                    },
                    "lawResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.lawResourceId.value]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "nsgStorageResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.nsgStorageAccountResourceId.value]"
                    },
                    "onPremisesAddressSpace": {
                        "value": "[parameters('onPremisesAddressSpace')]"
                    },
                    "sharedSvcResourceGroupName": {
                        "value": "[variables('sharedSvcRgName')]"
                    },
                    "sharedSvcSubscriptionId": {
                        "value": "[parameters('sharedSubscriptionId')]"
                    },
                    "sharedSvcVnetCidr": {
                        "value": "[variables('sharedSvcVnetCidr')]"
                    },
                    "sharedSvcVnetName": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.sharedSvcVnetName.value]"
                    },
                    "sharedSvcVnetResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.sharedSvcVnetResourceId.value]"
                    },
                    "transitIpIlbInner": {
                        "value": "[variables('transitIpIlbInner')]"
                    },
                    "transitIpNvaVm1Inner": {
                        "value": "[variables('transitIpNvaVm1Inner')]"
                    },
                    "transitIpNvaVm2Inner": {
                        "value": "[variables('transitIpNvaVm2Inner')]"
                    },
                    "transitIpNvaVm1Outer": {
                        "value": "[variables('transitIpNvaVm1Outer')]"
                    },
                    "transitIpNvaVm2Outer": {
                        "value": "[variables('transitIpNvaVm2Outer')]"
                    },
                    "transitVnetSubnetCidrBastion": {
                        "value": "[variables('transitVnetSubnetCidrBastion')]"
                    },
                    "transitVnetSubnetCidrGateway": {
                        "value": "[variables('transitVnetSubnetCidrGateway')]"
                    },
                    "transitVnetSubnetCidrNvaInner": {
                        "value": "[variables('transitVnetSubnetCidrNvaInner')]"
                    },
                    "transitVnetSubnetCidrNvaOuter": {
                        "value": "[variables('transitVnetSubnetCidrNvaOuter')]"
                    },
                    "transitVnetSubnetGatewayNvaInner": {
                        "value": "[variables('transitVnetSubnetGatewayNvaInner')]"
                    },
                    "transitVnetSubnetGatewayNvaOuter": {
                        "value": "[variables('transitVnetSubnetGatewayNvaOuter')]"
                    },
                    "transitVnetCidr": {
                        "value": "[variables('transitVnetCidr')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "vmAdminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "workloadVnetCidr": {
                        "value": "[variables('workloadVnetCidr')]"
                    },
                },
                "templateLink": {
                    "uri": "[variables('transitTemplatesFile')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('sharedSvcRgDeployNamePh2')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "resourceGroup": "[variables('sharedSvcRgName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('transitRgDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "devLinuxServerIp": {
                        "value": "[variables('sharedSvcIpLinuxDevServer')]"
                    },
                    "devWindowsServerIp": {
                        "value": "[variables('sharedSvcIpWindowsDevServer')]"
                    },
                    "firewallIp": {
                        "value": "[reference(variables('transitRgDeploymentName')).outputs.transitLoadBalancerNvaInnerIp.value]"
                    },
                    "lawResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.lawResourceId.value]"
                    },
                    "sharedSvcRtName": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.sharedSvcRtName.value]"
                    },
                    "sharedSvcVnetName": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.sharedSvcVnetName.value]"
                    },
                    "sharedSvcVnetSubnetNameDev": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.sharedSvcVnetSubnetNameDev.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "vmAdminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "vmAdminUsername": {
                        "value": "[parameters('vmAdminUsername')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('sharedSvcPh2TemplateFile')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('workloadRgDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('resourcesApiVersion')]",
            "subscriptionId": "[parameters('sharedSubscriptionId')]",
            "resourceGroup": "[variables('workloadRgName')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('sharedSvcRgDeployNamePh2'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "dnsServerIp": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.dnsResolverInboundIp.value]"
                    },
                    "firewallIp": {
                        "value": "[reference(variables('transitRgDeploymentName')).outputs.transitLoadBalancerNvaInnerIp.value]"
                    },
                    "keyVaultAdmin": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "lawResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.lawResourceId.value]"
                    },
                    "networkWatcherRg": {
                        "value": "[parameters('networkWatcherResourceGroup')]"
                    },
                    "nsgStorageAccountResourceId": {
                        "value": "[reference(variables('sharedSvcRgDeployNamePh1')).outputs.nsgStorageAccountResourceId.value]"
                    },
                    "sharedSvcResourceGroupName": {
                        "value": "[variables('sharedSvcRgName')]"
                    },
                    "sharedSvcSubscriptionId": {
                        "value": "[parameters('sharedSubscriptionId')]"
                    },
                    "transitResourceGroupName": {
                        "value": "[variables('transitRgName')]"
                    },
                    "transitVnetSubscriptionId": {
                        "value": "[parameters('transitSubscriptionId')]"
                    },
                    "transitVnetName": {
                        "value": "[reference(variables('transitRgDeploymentName')).outputs.transitVnetName.value]"
                    },
                    "transitVnetResourceId": {
                        "value": "[reference(variables('transitRgDeploymentName')).outputs.transitVnetResourceId.value]"
                    },
                    "workloadVnetCidr": {
                        "value": "[variables('workloadVnetCidr')]"
                    },
                    "workloadVnetSubnetAppCidr": {
                        "value": "[variables('workloadVnetSubnetAppCidr')]"
                    },
                    "workloadVnetSubnetDataCidr": {
                        "value": "[variables('workloadVnetSubnetDataCidr')]"
                    },
                    "workloadVnetSubnetSvcCidr": {
                        "value": "[variables('workloadVnetSubnetSvcCidr')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('workloadTemplatesFile')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
    }
}
