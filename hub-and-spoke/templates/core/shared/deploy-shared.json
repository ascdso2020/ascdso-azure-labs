{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "devLinuxServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Linux development virtual machine"
            }
        },
        "devWindowsServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP assigned to the Windows development virtual machine"
            }
        },
        "dnsServerIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address to set for the Virtual Network DNS server"
            }
        },
        "firewallIp": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the Azure Firewall where traffic will be routed to"
            }
        },
        "keyVaultAdmin": {
            "type": "string",
            "metadata": {
                "description": "The object ID of the user or group who will have full permissons on Azure Key Vault"
            }
        },
        "lawResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Log Analytics Workspace in the Shared Services subscription"
            }
        },
        "networkWatcherRg": {
            "type": "string",
            "metadata": {
                "description": "The resource group where the Network Watcher instances are stored"
            },
            "defaultValue": "NetworkWatcherRG"
        },
        "nsgStorageAccountResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the Storage Account for NSG Flow logs in the Transit subscription"
            }
        },
        "sharedSvcVnetCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the Shared Services virtual network"
            }
        },
        "sharedSvcVnetSubnetDevCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for the VM used to deploy code"
            }
        },
        "sharedSvcVnetSubnetSupportSvcCidr": {
            "type": "string",
            "metadata": {
                "description": "The CIDR assigned to the subnet used for support services served up behind private endpoints for central services"
            }
        },
        "transitResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the transit resource group"
            }
        },
        "transitSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "The transit subscription id"
            }
        },
        "transitVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of transit virtual network in the transit virtual network"
            }
        },
        "transitVnetResourceId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of the transit virtual network in the transit subscription"
            }
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "The tags that wil be associated to the resources"
            },
            "defaultValue": {
                "environment": "lab"
            }
        },
        "uniqueData": {
            "type": "string",
            "metadata": {
                "description": "Data used to append to resources to ensure uniqueness"
            },
            "defaultValue": "[substring(newGuid(),0,8)]"
        },
        "vmAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the VMs that are created"
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator name for VMs that are created"
            }
        }
    },
    "variables": {
        "_apiVersionNetworks": "2020-04-01",
        "_apiVersionResources": "2020-06-01",
        "_location": "[resourceGroup().location]",
        "deploymentNameKeyVaultCentral": "deploy-keyvault-central",
        "deploymentNameKvSecretUsername": "deploy-kv-secret-username",
        "deploymentNameKvSecretUserPassword": "deploy-kv-secret-user-password",
        "deploymentNameNsgFlowLogDev": "deploy-flowlog-dev",
        "deploymentNameNsgFlowLogSvc": "deploy-flowlog-svcs",
        "deploymentNamePeKeyVault": "deploy-pe-keyvault",
        "deploymentNameTransitVnetPeering": "deploy-vnetpeer-transit-to-shared",
        "deploymentNameVmLinuxDev": "deploy-dev-linux-vm",
        "deploymentNameVmWindowsDev": "deploy-dev-win-vm",
        "deploymentUriKeyVault": "[concat(variables('templatesUriGeneral'), 'deploy-key-vault.json')]",
        "deploymentUriKeyVaultSecret": "[concat(variables('templatesUriGeneral'), 'deploy-keyvault-secret.json')]",
        "deploymentUriLinuxDevVm": "[concat(variables('templatesUriGeneral'), 'deploy-ubuntu-dev-vm.json')]",
        "deploymentUriPe": "[concat(variables('templatesUriGeneral'), 'deploy-private-endpoint.json')]",
        "deploymentUriNsgFlowLog": "[concat(variables('templatesUriGeneral'), 'deploy-nsg-flow-log.json')]",
        "deploymentUriWindowsDevVm": "[concat(variables('templatesUriGeneral'), 'deploy-windows-dev-vm.json')]",
        "dnsZoneNameKeyVault": "privatelink.vaultcore.azure.net",
        "keyVaultSecretNameUsername": "adminusername",
        "keyVaultSecretNameUserPassword": "adminpassword",
        "nsgNameDev": "[concat('nsg-dev', parameters('uniqueData'))]",
        "nsgNameSupportSvcs": "[concat('nsg-svcs', parameters('uniqueData'))]",
        "routeTableNameSharedSvcDev": "rt-dev",
        "rgNameSharedSvc": "[resourceGroup().name]",
        "subscriptionIdSharedSvc": "[subscription().subscriptionId]",
        "templatesUriGeneral": "[uri(deployment().properties.templateLink.uri, '../../general/')]",
        "vmNameLinuxDev": "vmldev01",
        "vmNameWindowsDev": "vmwdev01",
        "vmSku": "Standard_D4s_v5",
        "vnetNameSharedSvc": "[concat('vnet-shared', parameters('uniqueData'))]",
        "vnetPeeringSharedToTransit": "peersharedtotransit",
        "vnetPeeringTransitToShared": "peertransittoshared",
        "vnetStandardDdosProtection": false,
        "vnetSubnetNameSharedSvcDev": "snet-dev",
        "vnetSubnetNameSharedSvcSupportSvc": "snet-svcs"
    },
    "resources": [
        {
            "name": "[variables('deploymentNameKeyVaultCentral')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "defaultAction": {
                        "value": "Allow"
                    },
                    "keyVaultAdminObjectId": {
                        "value": "[parameters('keyVaultAdmin')]"
                    },
                    "keyVaultNamePrefix": {
                        "value": "kvcnt"
                    },
                    "laWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVault')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameKvSecretUsername')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('_location')]"
                    },
                    "secretName": {
                        "value": "[variables('keyVaultSecretNameUsername')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVaultSecret')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameKvSecretUserPassword')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "keyVaultName": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.keyVaultName.value]"
                    },
                    "location": {
                        "value": "[variables('_location')]"
                    },
                    "secretName": {
                        "value": "[variables('keyVaultSecretNameUserPassword')]"
                    },
                    "secretValue": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriKeyVaultSecret')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgNameDev')]",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[variables('_location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsgNameSupportSvcs')]",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[variables('_location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[variables('deploymentNameNsgFlowLogSvc')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameSupportSvcs'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('_location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('nsgNameSupportSvcs')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgNameSupportSvcs'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('nsgStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriNsgFlowLog')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameNsgFlowLogDev')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "resourceGroup": "[parameters('networkWatcherRg')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', variables('deploymentNameNsgFlowLogSvc'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameDev'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "location": {
                        "value": "[variables('_location')]"
                    },
                    "targetLaWorkspaceResourceId": {
                        "value": "[parameters('lawResourceId')]"
                    },
                    "targetNsgName": {
                        "value": "[variables('nsgNameDev')]"
                    },
                    "targetNsgResourceId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgNameDev'))]"
                    },
                    "targetStorageResourceId": {
                        "value": "[parameters('nsgStorageAccountResourceId')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriNsgFlowLog')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('routeTableNameSharedSvcDev')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[variables('_location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNameNsgFlowLogDev'))]"
            ],
            "properties": {
                "routes": [
                    {
                        "name": "udr-default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewallIp')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": "True"
            },
            "resources": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetNameSharedSvc')]",
            "apiVersion": "[variables('_apiVersionNetworks')]",
            "location": "[variables('_location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameDev'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameSupportSvcs'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableNameSharedSvcDev'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('sharedSvcVnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnetSubnetNameSharedSvcDev')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetDevCidr')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',variables('routeTableNameSharedSvcDev'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameDev'))]"
                            },
                            "privateEndpointNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('vnetSubnetNameSharedSvcSupportSvc')]",
                        "properties": {
                            "addressPrefix": "[parameters('sharedSvcVnetSubnetSupportSvcCidr')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgNameSupportSvcs'))]"
                            },
                            "privateEndpointNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "enableDdosProtection": "[variables('vnetStandardDdosProtection')]",
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('dnsServerIp')]"
                    ]
                }
            },
            "resources": [
                {
                    "name": "[variables('vnetPeeringSharedToTransit')]",
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "[variables('_apiVersionNetworks')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetNameSharedSvc'))]"
                    ],
                    "properties": {
                        "allowVirtualNetworkAccess": "true",
                        "allowForwardedTraffic": "true",
                        "allowGatewayTransit": "false",
                        "useRemoteGateways": "true",
                        "remoteVirtualNetwork": {
                            "id": "[parameters('transitVnetResourceId')]"
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('deploymentNameTransitVnetPeering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "subscriptionId": "[parameters('transitSubscriptionId')]",
            "resourceGroup": "[parameters('transitResourceGroupName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetNameSharedSvc'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('transitVnetName'),'/',variables('vnetPeeringTransitToShared'))]",
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "[variables('_apiVersionNetworks')]",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "allowVirtualNetworkAccess": "true",
                                "allowForwardedTraffic": "true",
                                "allowGatewayTransit": "true",
                                "useRemoteGateways": "false",
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId(variables('subscriptionIdSharedSvc'), variables('rgNameSharedSvc'), 'Microsoft.Network/virtualNetworks', variables('vnetNameSharedSvc'))]"
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[variables('deploymentNamePeKeyVault')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNameTransitVnetPeering'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "privateDnsZoneName": {
                        "value": "[variables('dnsZoneNameKeyVault')]"
                    },
                    "privateEndpointLocation": {
                        "value": "[variables('_location')]"
                    },
                    "privateDnsZoneResourceGroup": {
                        "value": "[parameters('transitResourceGroupName')]"
                    },
                    "privateDnsZoneSubscription": {
                        "value": "[parameters('transitSubscriptionId')]"
                    },
                    "privateEndpointSubnetName": {
                        "value": "[variables('vnetSubnetNameSharedSvcDev')]"
                    },
                    "privateEndpointSubResource": {
                        "value": "vault"
                    },
                    "privateEndpointVnetName": {
                        "value": "[variables('vnetNameSharedSvc')]"
                    },
                    "resourceName": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.keyVaultName.value]"
                    },
                    "resourceIdentifier": {
                        "value": "[reference(variables('deploymentNameKeyVaultCentral')).outputs.KeyVaultResourceId.value]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriPe')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameVmLinuxDev')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNamePeKeyVault'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "serverIpAddress": {
                        "value": "[parameters('devLinuxServerIp')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('vnetSubnetNameSharedSvcDev')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('vmNameLinuxDev')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnetNameSharedSvc')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriLinuxDevVm')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "name": "[variables('deploymentNameVmWindowsDev')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('_apiVersionResources')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/',variables('deploymentNameVmLinuxDev'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "adminPassword": {
                        "value": "[parameters('vmAdminPassword')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('vmAdminUsername')]"
                    },
                    "serverIpAddress": {
                        "value": "[parameters('devWindowsServerIp')]"
                    },
                    "myWorkspaceId": {
                        "value": "[reference(parameters('lawResourceId'), '2015-03-20').customerId]"
                    },
                    "myWorkspaceKey": {
                        "value": "[listKeys(parameters('lawResourceId'), '2015-03-20').primarySharedKey]"
                    },
                    "subnetName": {
                        "value": "[variables('vnetSubnetNameSharedSvcDev')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "uniqueData": {
                        "value": "[parameters('uniqueData')]"
                    },
                    "virtualMachineSize": {
                        "value": "[variables('vmSku')]"
                    },
                    "vmName": {
                        "value": "[variables('vmNameWindowsDev')]"
                    },
                    "vnetName": {
                        "value": "[variables('vnetNameSharedSvc')]"
                    }
                },
                "templateLink": {
                    "uri": "[variables('deploymentUriWindowsDevVm')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        }
    ],
    "outputs": {
    }
}
